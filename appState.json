{"EDITOR_STATE":{"allProjectFiles":{"10555553-becc-445d-8be0-850122ff884f":{"id":"10555553-becc-445d-8be0-850122ff884f","parent":null,"name":"JK","type":"DIRECTORY","isDirectory":true,"children":["5075e374-101f-4998-bf04-7f3e36e19f97"],"isRemovable":false,"filePath":"JK"},"5075e374-101f-4998-bf04-7f3e36e19f97":{"id":"5075e374-101f-4998-bf04-7f3e36e19f97","parent":"10555553-becc-445d-8be0-850122ff884f","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"JK/lambda.js","code":"var AWSXRay = require('aws-xray-sdk');\nvar oldRequire = require;\n/*\n* todo check env before wrapping. if process.env.trace is set, then wrap require, else just return\n*/\nrequire = function (lib) {\n\tconsole.log(\"Requiring lib\", lib);\n\tswitch (lib) {\n\t\tcase \"aws-sdk\":\n\t\t\treturn AWSXRay.captureAWS(oldRequire(lib));\n\t\tcase \"aws-xray-sdk\":\n\t\t\treturn AWSXRay;\n\t\tcase \"mysql\":\n\t\t\treturn AWSXRay.captureMySQL(oldRequire('mysql'));\n\t\tcase \"pg\":\n\t\t\treturn AWSXRay.capturePostgres(oldRequire('pg'));\n\t}\n\treturn oldRequire(lib);\n}\n\nvar AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\nlet axios = require('axios');\nexports.handler = function (event, context, callback) {\n\tvar functionLifeCycle = AWSXRay.getSegment().addNewSubsegment(\"FunctionLifeCycle\");\n\tfunctionLifeCycle.addMetadata(\"event\", event);\n\tfunctionLifeCycle.addMetadata(\"context\", context);\n\thandle(event, context, (err, data) => {\n\t\tfunctionLifeCycle.addMetadata(\"response\", data);\n\t\tfunctionLifeCycle.close(err, false);\n\t\tcallback(err, data);\n\t});\n}\n\nfunction handle(event, context, callback) {\n\n\taxios.get(\"https://google.com\").then((response) => {\n\t\tddb.get({\n\t\t\tTableName: 'BTMenu',\n\t\t\tKey: { 'itemCode': 'TOMS' }\n\t\t}, function (err, data) {\n\t\t\tconsole.log(\"Data\", data);\n\t\t\tcallback(err, data);\n\t\t});\n\t}).catch(err => {\n\t\tconsole.error(err);\n\t});\n}","triggers":[],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"},"testCases":{"9f05f08e-4fab-477f-9233-3b93354f3617":{"id":"9f05f08e-4fab-477f-9233-3b93354f3617","name":"Unnamed event","functionId":"5075e374-101f-4998-bf04-7f3e36e19f97","event":"{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"}},"references":[]}},"rootNode":"10555553-becc-445d-8be0-850122ff884f","openFiles":["5075e374-101f-4998-bf04-7f3e36e19f97"],"currentFileId":"5075e374-101f-4998-bf04-7f3e36e19f97","resources":{"ddbBTMenu":{"name":"ddbBTMenu","type":"DynamoDB","config":{"mode":1,"operation":"get","table":{"arn":"arn:aws:dynamodb:us-east-1:318300609668:table/BTMenu","name":"BTMenu","partitionKey":"itemCode","partitionKeyType":"S","hasSortKey":false,"sortKey":"","sortKeyType":"S","mode":1},"parameters":{"Key":{"itemCode":"Hello"},"Item":{},"ExpressionAttributeValues":{}},"validator":{"validatableFields":{},"validity":true},"valid":true},"globallyEditable":false}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":null,"shouldPersist":false,"editable":false}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"random":{"name":"random","downloadsLast30Days":323,"downloadsRatio":0.000001648438602015734,"humanDownloadsLast30Days":"323","popular":false,"version":"2.0.12","versions":{"0.1.0":"2011-05-31T20:29:29.538Z","1.0.0-beta":"2011-06-01T02:51:26.301Z","1.0.0-beta-1":"2011-06-01T02:58:18.965Z","2.0.0":"2018-06-07T20:56:33.442Z","2.0.1":"2018-06-07T21:07:43.061Z","2.0.2":"2018-06-07T21:15:00.006Z","2.0.3":"2018-06-08T18:09:37.387Z","2.0.4":"2018-06-13T16:54:50.882Z","2.0.5":"2018-06-13T17:08:20.861Z","2.0.6":"2018-06-13T17:11:17.796Z","2.0.7":"2018-06-13T17:34:01.173Z","2.0.8":"2018-06-13T17:38:23.607Z","2.0.9":"2018-06-13T20:17:29.409Z","2.0.10":"2018-06-13T21:52:32.750Z","2.0.11":"2018-06-13T21:54:19.880Z","2.0.12":"2018-06-14T00:28:12.558Z"},"tags":{"latest":"2.0.12"},"description":"Seedable random number generator supporting many common distributions.","dependencies":{"babel-runtime":"^6.26.0","ow":"^0.4.0","ow-lite":"^0.0.2"},"devDependencies":{"ava":"^0.25.0","babel-cli":"^6.26.0","babel-preset-env":"^1.7.0","del-cli":"^1.1.0","esm":"^3.0.48","seedrandom":"^2.4.3","standard":"^11.0.0","update-markdown-jsdoc":"^1.0.2"},"repository":{"url":"https://github.com/transitive-bullshit/random","project":"random","user":"transitive-bullshit","host":"github.com","path":"","branch":"master"},"githubRepo":{"user":"transitive-bullshit","project":"random","path":"","head":"master"},"gitHead":"master","readme":"# random\n\n> Seedable random number generator supporting many common distributions.\n\n[![NPM](https://img.shields.io/npm/v/random.svg)](https://www.npmjs.com/package/random) [![Build Status](https://travis-ci.com/transitive-bullshit/random.svg?branch=master)](https://travis-ci.com/transitive-bullshit/random) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\nWelcome to the most **random** module on npm! ð\n\n## Highlights\n\n-   Simple API (_make easy things easy and hard things possible_)\n-   Seedable based on entropy or user input\n-   Plugin support for different pseudo random number generators (PRNGs)\n-   Sample from many common distributions\n    -   uniform, normal, poisson, bernoulli, etc\n-   Validates all user input via [ow](https://github.com/sindresorhus/ow)\n-   Integrates with [seedrandom](https://github.com/davidbau/seedrandom)\n-   Supports node >= 6 and browser\n\n## Install\n\n```bash\nnpm install --save random\n```\n\n## Usage\n\n```js\nconst random = require('random')\n\n// quick uniform shortcuts\nrandom.float(min = 0, max = 1) // uniform float in [ min, max )\nrandom.int(min = 0, max = 1) // uniform integer in [ min, max ]\nrandom.boolean() // true or false\n\n// uniform\nrandom.uniform(min = 0, max = 1) // () => [ min, max )\nrandom.uniformInt(min = 0, max = 1) // () => [ min, max ]\nrandom.uniformBoolean() // () => [ false, true ]\n\n// normal\nrandom.normal(mu = 0, sigma = 1)\nrandom.logNormal(mu = 0, sigma = 1)\n\n// bernoulli\nrandom.bernoulli(p = 0.5)\nrandom.binomial(n = 1, p = 0.5)\nrandom.geometric(p = 0.5)\n\n// poisson\nrandom.poisson(lambda = 1)\nrandom.exponential(lambda = 1)\n\n// misc\nrandom.irwinHall(n)\nrandom.bates(n)\nrandom.pareto(alpha)\n```\n\nFor convenience, several common uniform samplers are exposed directly:\n\n```js\nrandom.float()     // 0.2149383367670885\nrandom.int(0, 100) // 72\nrandom.boolean()   // true\n```\n\n**All distribution methods return a thunk** (function with no params), which will return\na series of independent, identically distributed random variables from the specified distribution.\n\n```js\n// create a normal distribution with default params (mu=1 and sigma=0)\nconst normal = random.normal()\nnormal() // 0.4855465422678824\nnormal() // -0.06696771815439678\nnormal() // 0.7350852689834705\n\n// create a poisson distribution with default params (lambda=1)\nconst poisson = random.poisson()\npoisson() // 0\npoisson() // 4\npoisson() // 1\n```\n\nNote that returning a thunk here is more efficient when generating multiple\nsamples from the same distribution.\n\nYou can change the underlying PRNG or its seed as follows:\n\n```js\nconst seedrandom = require('seedrandom')\n\n// change the underlying pseudo random number generator\n// by default, Math.random is used as the underlying PRNG\nrandom.use(seedrandom('foobar'))\n\n// create a new independent random number generator\nconst rng = random.clone('my-new-seed')\n\n// create a second independent random number generator and use a seeded PRNG\nconst rng2 = random.clone(seedrandom('kittyfoo'))\n\n// replace Math.random with rng.uniform\nrng.patch()\n\n// restore original Math.random\nrng.unpatch()\n```\n\n## API\n\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->\n\n#### Table of Contents\n\n-   [Random](#random)\n    -   [rng](#rng)\n    -   [clone](#clone)\n    -   [use](#use)\n    -   [patch](#patch)\n    -   [unpatch](#unpatch)\n    -   [next](#next)\n    -   [float](#float)\n    -   [int](#int)\n    -   [integer](#integer)\n    -   [bool](#bool)\n    -   [boolean](#boolean)\n    -   [uniform](#uniform)\n    -   [uniformInt](#uniformint)\n    -   [uniformBoolean](#uniformboolean)\n    -   [normal](#normal)\n    -   [logNormal](#lognormal)\n    -   [bernoulli](#bernoulli)\n    -   [binomial](#binomial)\n    -   [geometric](#geometric)\n    -   [poisson](#poisson)\n    -   [exponential](#exponential)\n    -   [irwinHall](#irwinhall)\n    -   [bates](#bates)\n    -   [pareto](#pareto)\n\n### [Random](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L35-L379)\n\nSeedable random number generator supporting many common distributions.\n\nDefaults to Math.random as its underlying pseudorandom number generator.\n\nType: `function (rng)`\n\n-   `rng` **(RNG | [function](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/function))** Underlying pseudorandom number generator. (optional, default `Math.random`)\n\n* * *\n\n#### [rng](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L45-L47)\n\nType: `function ()`\n\n* * *\n\n#### [clone](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L59-L61)\n\n-   **See: RNG.clone**\n\nCreates a new `Random` instance, optionally specifying parameters to\nset a new seed.\n\nType: `function (args, seed, opts): Random`\n\n-   `args` **...any**\n-   `seed` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)?** Optional seed for new RNG.\n-   `opts` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)?** Optional config for new RNG options.\n\n* * *\n\n#### [use](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L81-L86)\n\nSets the underlying pseudorandom number generator used via\neither an instance of `seedrandom`, a custom instance of RNG\n(for PRNG plugins), or a string specifying the PRNG to use\nalong with an optional `seed` and `opts` to initialize the\nRNG.\n\nType: `function (args)`\n\n-   `args` **...any**\n\nExample:\n\n```javascript\nconst random = require('random')\n\nrandom.use('xor128', 'foobar')\n// or\nrandom.use(seedrandom('kittens'))\n// or\nrandom.use(Math.random)\n```\n\n* * *\n\n#### [patch](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L91-L98)\n\nPatches `Math.random` with this Random instance's PRNG.\n\nType: `function ()`\n\n* * *\n\n#### [unpatch](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L103-L108)\n\nRestores a previously patched `Math.random` to its original value.\n\nType: `function ()`\n\n* * *\n\n#### [next](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L121-L123)\n\nConvenience wrapper around `this.rng.next()`\n\nReturns a floating point number in \\[0, 1).\n\nType: `function (): number`\n\n* * *\n\n#### [float](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L135-L137)\n\nSamples a uniform random floating point number, optionally specifying\nlower and upper bounds.\n\nConvence wrapper around `random.uniform()`\n\nType: `function (min, max): number`\n\n-   `min` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Lower bound (float, inclusive) (optional, default `0`)\n-   `max` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Upper bound (float, exclusive) (optional, default `1`)\n\n* * *\n\n#### [int](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L149-L151)\n\nSamples a uniform random integer, optionally specifying lower and upper\nbounds.\n\nConvence wrapper around `random.uniformInt()`\n\nType: `function (min, max): number`\n\n-   `min` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Lower bound (integer, inclusive) (optional, default `0`)\n-   `max` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Upper bound (integer, inclusive) (optional, default `1`)\n\n* * *\n\n#### [integer](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L165-L167)\n\nSamples a uniform random integer, optionally specifying lower and upper\nbounds.\n\nConvence wrapper around `random.uniformInt()`\n\nType: `function (min, max): number`\n\n-   `min` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Lower bound (integer, inclusive) (optional, default `0`)\n-   `max` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Upper bound (integer, inclusive) (optional, default `1`)\n\n* * *\n\n#### [bool](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L178-L180)\n\nSamples a uniform random boolean value.\n\nConvence wrapper around `random.uniformBoolean()`\n\nType: `function (): boolean`\n\n* * *\n\n#### [boolean](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L189-L191)\n\nSamples a uniform random boolean value.\n\nConvence wrapper around `random.uniformBoolean()`\n\nType: `function (): boolean`\n\n* * *\n\n#### [uniform](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L204-L206)\n\nGenerates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\n\nType: `function (min, max): function`\n\n-   `min` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Lower bound (float, inclusive) (optional, default `0`)\n-   `max` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Upper bound (float, exclusive) (optional, default `1`)\n\n* * *\n\n#### [uniformInt](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L215-L217)\n\nGenerates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution).\n\nType: `function (min, max): function`\n\n-   `min` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Lower bound (integer, inclusive) (optional, default `0`)\n-   `max` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Upper bound (integer, inclusive) (optional, default `1`)\n\n* * *\n\n#### [uniformBoolean](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L227-L229)\n\nGenerates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution),\nwith two possible outcomes, `true` or \\`false.\n\nThis method is analogous to flipping a coin.\n\nType: `function (): function`\n\n* * *\n\n#### [normal](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L242-L244)\n\nGenerates a [Normal distribution](https://en.wikipedia.org/wiki/Normal_distribution).\n\nType: `function (mu, sigma): function`\n\n-   `mu` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Mean (optional, default `0`)\n-   `sigma` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Standard deviation (optional, default `1`)\n\n* * *\n\n#### [logNormal](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L253-L255)\n\nGenerates a [Log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution).\n\nType: `function (mu, sigma): function`\n\n-   `mu` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Mean of underlying normal distribution (optional, default `0`)\n-   `sigma` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Standard deviation of underlying normal distribution (optional, default `1`)\n\n* * *\n\n#### [bernoulli](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L267-L269)\n\nGenerates a [Bernoulli distribution](https://en.wikipedia.org/wiki/Bernoulli_distribution).\n\nType: `function (p): function`\n\n-   `p` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Success probability of each trial. (optional, default `0.5`)\n\n* * *\n\n#### [binomial](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L278-L280)\n\nGenerates a [Binomial distribution](https://en.wikipedia.org/wiki/Binomial_distribution).\n\nType: `function (n, p): function`\n\n-   `n` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Number of trials. (optional, default `1`)\n-   `p` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Success probability of each trial. (optional, default `0.5`)\n\n* * *\n\n#### [geometric](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L288-L290)\n\nGenerates a [Geometric distribution](https://en.wikipedia.org/wiki/Geometric_distribution).\n\nType: `function (p): function`\n\n-   `p` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Success probability of each trial. (optional, default `0.5`)\n\n* * *\n\n#### [poisson](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L302-L304)\n\nGenerates a [Poisson distribution](https://en.wikipedia.org/wiki/Poisson_distribution).\n\nType: `function (lambda): function`\n\n-   `lambda` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Mean (lambda > 0) (optional, default `1`)\n\n* * *\n\n#### [exponential](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L312-L314)\n\nGenerates an [Exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution).\n\nType: `function (lambda): function`\n\n-   `lambda` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Inverse mean (lambda > 0) (optional, default `1`)\n\n* * *\n\n#### [irwinHall](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L326-L328)\n\nGenerates an [Irwin Hall distribution](https://en.wikipedia.org/wiki/Irwin%E2%80%93Hall_distribution).\n\nType: `function (n): function`\n\n-   `n` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Number of uniform samples to sum (n >= 0)\n\n* * *\n\n#### [bates](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L336-L338)\n\nGenerates a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution).\n\nType: `function (n): function`\n\n-   `n` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Number of uniform samples to average (n >= 1)\n\n* * *\n\n#### [pareto](https://github.com/transitive-bullshit/random/blob/fbc667aa5bec1779c9f1b853244914af7fa1bed6/src/random.js#L346-L348)\n\nGenerates a [Pareto distribution](https://en.wikipedia.org/wiki/Pareto_distribution).\n\nType: `function (alpha): function`\n\n-   `alpha` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Alpha\n\n* * *\n\n## Todo\n\n-   Distributions\n\n    -   [x] uniform\n    -   [x] uniformInt\n    -   [x] uniformBoolean\n    -   [x] normal\n    -   [x] logNormal\n    -   [ ] chiSquared\n    -   [ ] cauchy\n    -   [ ] fischerF\n    -   [ ] studentT\n    -   [x] bernoulli\n    -   [x] binomial\n    -   [ ] negativeBinomial\n    -   [x] geometric\n    -   [x] poisson\n    -   [x] exponential\n    -   [ ] gamma\n    -   [ ] hyperExponential\n    -   [ ] weibull\n    -   [ ] beta\n    -   [ ] laplace\n    -   [x] irwinHall\n    -   [x] bates\n    -   [x] pareto\n\n-   Generators\n\n    -   [x] pluggable prng\n    -   [ ] port more prng from boost\n    -   [ ] custom entropy\n\n-   Misc\n    -   [x] browser support via rollup\n    -   [x] basic docs\n    -   [x] basic tests\n    -   [ ] full test suite\n    -   [x] initial release!\n\n## Related\n\n-   [d3-random](https://github.com/d3/d3-random) - D3's excellent random number generation library.\n-   [seedrandom](https://github.com/davidbau/seedrandom) - Seedable pseudo random number generator.\n-   [random-int](https://github.com/sindresorhus/random-int) - For the common use case of generating uniform random ints.\n-   [random-float](https://github.com/sindresorhus/random-float) - For the common use case of generating uniform random floats.\n-   [randombytes](https://github.com/crypto-browserify/randombytes) - Random crypto bytes for Node.js and the browser.\n\n## Credit\n\nHuge shoutout to [Roger Combs](https://github.com/rcombs) for donating the `random` npm package for this project!\n\nLots of inspiration from [d3-random](https://github.com/d3/d3-random) ([@mbostock](https://github.com/mbostock) and [@svanschooten](https://github.com/svanschooten)).\n\nSome distributions and PRNGs are ported from C++ [boost::random](https://www.boost.org/doc/libs/1_66_0/doc/html/boost_random/reference.html#boost_random.reference.distributions).\n\n## License\n\nMIT Â© [Travis Fischer](https://github.com/transitive-bullshit)\n","owner":{"name":"transitive-bullshit","avatar":"https://github.com/transitive-bullshit.png","link":"https://github.com/transitive-bullshit"},"deprecated":false,"homepage":null,"license":"MIT","keywords":["random","number","generator","rng","prng","stats","d3-random","seedrandom","distribution","pseudorandom","uniform","normal","gaussian","lognormal","poisson","exponential","irwinhall","bates"],"computedKeywords":[],"computedMetadata":{},"created":1306873769175,"modified":1528936093075,"lastPublisher":{"name":"fisch0920","email":"fisch0920@gmail.com","avatar":"https://gravatar.com/avatar/22f88b179485027d00cd759a19cd7207","link":"https://www.npmjs.com/~fisch0920"},"owners":[{"email":"fisch0920@gmail.com","name":"fisch0920","avatar":"https://gravatar.com/avatar/22f88b179485027d00cd759a19cd7207","link":"https://www.npmjs.com/~fisch0920"}],"lastCrawl":"2018-06-14T00:28:13.557Z","_searchInternal":{"concatenatedName":"random","alternativeNames":["random","random","random"],"downloadsMagnitude":3},"dependents":3,"humanDependents":"3","changelogFilename":null,"objectID":"random","_highlightResult":{"name":{"value":"<em>random</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["random"]},"description":{"value":"Seedable <em>random</em> number generator supporting many common distributions.","matchLevel":"full","fullyHighlighted":false,"matchedWords":["random"]},"owner":{"name":{"value":"transitive-bullshit","matchLevel":"none","matchedWords":[]}},"keywords":[{"value":"<em>random</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["random"]},{"value":"number","matchLevel":"none","matchedWords":[]},{"value":"generator","matchLevel":"none","matchedWords":[]},{"value":"rng","matchLevel":"none","matchedWords":[]},{"value":"prng","matchLevel":"none","matchedWords":[]},{"value":"stats","matchLevel":"none","matchedWords":[]},{"value":"d3-<em>random</em>","matchLevel":"full","fullyHighlighted":false,"matchedWords":["random"]},{"value":"seedrandom","matchLevel":"none","matchedWords":[]},{"value":"distribution","matchLevel":"none","matchedWords":[]},{"value":"pseudorandom","matchLevel":"none","matchedWords":[]},{"value":"uniform","matchLevel":"none","matchedWords":[]},{"value":"normal","matchLevel":"none","matchedWords":[]},{"value":"gaussian","matchLevel":"none","matchedWords":[]},{"value":"lognormal","matchLevel":"none","matchedWords":[]},{"value":"poisson","matchLevel":"none","matchedWords":[]},{"value":"exponential","matchLevel":"none","matchedWords":[]},{"value":"irwinhall","matchLevel":"none","matchedWords":[]},{"value":"bates","matchLevel":"none","matchedWords":[]}],"owners":[{"name":{"value":"fisch0920","matchLevel":"none","matchedWords":[]}}],"_searchInternal":{"alternativeNames":[{"value":"<em>random</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["random"]},{"value":"<em>random</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["random"]},{"value":"<em>random</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["random"]}]}}},"firebase":{"name":"firebase","downloadsLast30Days":725265,"downloadsRatio":0.004136427799061953,"humanDownloadsLast30Days":"725.3k","popular":false,"version":"5.0.4","versions":{"0.0.0":"2012-02-21T23:57:54.128Z","0.5.0":"2013-03-17T20:29:21.192Z","0.5.1":"2013-03-20T01:10:46.342Z","0.5.2":"2013-05-06T18:00:44.519Z","0.5.3":"2013-05-21T17:27:50.206Z","0.5.4":"2013-05-29T21:51:55.952Z","0.6.0":"2013-07-12T01:16:42.243Z","0.6.1":"2013-07-29T17:27:08.453Z","0.6.2":"2013-08-28T18:08:09.285Z","0.6.3":"2013-08-28T22:24:28.660Z","0.6.4":"2013-10-29T17:40:07.795Z","0.6.5":"2013-10-29T22:03:30.294Z","0.6.6":"2013-10-30T01:03:08.376Z","0.6.7":"2013-11-05T16:37:54.032Z","0.6.8":"2013-11-08T00:48:36.660Z","0.6.9":"2013-11-09T00:30:31.734Z","0.6.10":"2013-11-13T00:51:55.575Z","0.6.11":"2013-11-13T20:11:44.868Z","0.6.14":"2013-11-15T21:32:59.761Z","0.6.15":"2013-11-19T17:48:32.696Z","0.6.16":"2013-11-19T22:56:58.843Z","0.6.17":"2013-11-21T01:46:18.455Z","0.6.19":"2013-12-02T18:17:08.519Z","0.6.21":"2013-12-03T18:30:09.136Z","0.6.22":"2013-12-03T21:18:35.695Z","1.0.1":"2013-12-10T22:03:32.221Z","1.0.1-npm":"2013-12-11T18:16:19.576Z","1.0.2":"2014-01-06T20:27:54.865Z","1.0.3":"2014-02-05T00:00:02.496Z","1.0.4":"2014-02-09T06:00:54.347Z","1.0.5":"2014-02-10T17:41:56.401Z","1.0.10":"2014-02-27T23:11:20.008Z","1.0.10-2":"2014-03-05T01:56:00.791Z","1.0.11":"2014-03-17T22:54:46.623Z","1.0.12":"2014-04-29T21:21:09.188Z","1.0.13":"2014-05-01T22:15:15.736Z","1.0.14":"2014-05-02T18:10:51.385Z","1.0.15":"2014-05-05T18:38:38.938Z","1.0.15-2":"2014-05-12T22:05:39.913Z","1.0.15-3":"2014-05-12T22:06:26.100Z","1.0.17":"2014-06-02T23:31:46.886Z","1.0.18":"2014-07-24T21:17:43.330Z","1.0.19":"2014-08-08T00:41:31.307Z","1.0.20":"2014-08-21T19:24:46.390Z","1.0.21":"2014-08-22T00:40:04.698Z","1.0.22":"2014-09-22T22:19:44.714Z","1.0.23":"2014-09-23T00:29:29.067Z","1.0.24":"2014-09-23T22:45:27.964Z","1.1.0":"2014-10-02T23:14:07.211Z","1.1.1":"2014-10-09T23:37:38.316Z","1.1.2":"2014-10-13T19:09:29.201Z","1.2.0-beta.1":"2014-10-17T18:46:59.164Z","1.2.0-beta.1-0":"2014-10-17T20:28:17.493Z","1.2.0-beta.2":"2014-10-17T23:23:48.132Z","1.1.3":"2014-10-27T18:50:26.194Z","1.2.0-beta.3":"2014-10-27T20:43:28.962Z","2.0.0":"2014-11-04T00:24:44.242Z","2.0.1":"2014-11-04T08:05:38.312Z","2.0.2":"2014-11-06T18:34:01.365Z","2.0.3":"2014-11-12T19:52:36.604Z","2.0.4":"2014-11-18T00:16:19.726Z","2.0.5":"2014-11-26T19:58:33.795Z","2.0.6":"2014-12-04T22:53:14.849Z","2.1.0":"2015-01-06T22:55:29.533Z","2.1.1":"2015-01-12T23:36:43.361Z","2.1.2":"2015-01-28T18:44:50.577Z","1.2.0":"2015-02-12T23:59:02.678Z","2.2.0":"2015-02-13T00:03:15.813Z","2.2.1":"2015-02-23T22:35:39.109Z","2.2.2":"2015-03-04T19:13:04.533Z","2.2.3":"2015-03-18T17:55:25.182Z","2.2.4":"2015-04-13T21:32:14.797Z","2.2.5":"2015-05-19T01:18:28.525Z","2.2.6":"2015-06-01T20:24:25.662Z","2.2.7":"2015-06-09T20:56:35.661Z","2.2.8":"2015-07-29T18:05:18.583Z","2.2.9":"2015-07-30T21:48:54.984Z","2.3.0":"2015-09-24T21:13:22.371Z","2.3.1":"2015-09-30T18:52:58.801Z","2.3.2":"2015-11-18T18:34:50.039Z","2.4.0":"2016-01-21T22:00:38.105Z","2.4.1":"2016-02-17T22:18:56.082Z","2.4.2":"2016-03-28T21:42:11.859Z","3.0.0":"2016-05-18T17:15:45.432Z","3.0.1":"2016-05-19T00:01:57.838Z","3.0.2":"2016-05-20T03:08:35.613Z","3.0.3":"2016-05-24T23:01:01.084Z","3.0.4":"2016-06-07T20:44:24.183Z","3.0.5":"2016-06-14T23:20:55.047Z","3.1.0":"2016-06-28T21:01:57.291Z","3.2.0":"2016-07-12T21:46:35.477Z","3.2.1":"2016-07-26T18:35:41.111Z","3.3.0":"2016-08-16T18:42:48.586Z","3.3.1":"2016-09-07T18:47:47.434Z","3.3.2":"2016-09-08T20:46:45.731Z","3.4.0":"2016-09-14T16:11:16.229Z","3.4.1":"2016-09-27T17:38:38.143Z","3.5.0":"2016-10-14T18:33:03.485Z","3.5.1":"2016-10-19T22:34:59.954Z","3.5.2":"2016-10-24T23:20:50.237Z","3.5.3":"2016-11-01T17:23:41.911Z","3.6.0":"2016-11-08T20:04:24.408Z","3.6.1":"2016-11-15T20:20:16.807Z","3.6.2":"2016-11-29T17:02:17.265Z","3.6.3":"2016-12-06T18:40:01.476Z","3.6.4":"2016-12-13T21:21:48.454Z","3.6.5":"2017-01-10T20:52:21.446Z","3.6.6":"2017-01-18T00:46:56.654Z","3.6.7":"2017-01-24T23:33:56.703Z","3.6.8":"2017-01-31T23:40:29.576Z","3.6.9":"2017-02-07T22:12:47.489Z","3.6.10":"2017-02-21T20:38:55.900Z","3.7.0":"2017-03-01T19:32:41.868Z","3.7.1":"2017-03-09T16:02:16.362Z","3.7.2":"2017-03-14T19:41:06.562Z","3.7.3":"2017-03-21T23:23:31.332Z","3.7.4":"2017-03-28T21:04:09.874Z","3.7.5":"2017-04-04T22:13:23.906Z","3.7.6":"2017-04-11T23:11:23.372Z","3.7.7":"2017-04-14T17:29:54.180Z","3.7.8":"2017-04-14T19:41:24.333Z","3.8.0":"2017-04-18T23:33:23.087Z","3.9.0":"2017-04-25T21:40:51.493Z","4.0.0":"2017-05-17T20:03:11.047Z","4.1.0":"2017-05-30T22:46:27.033Z","4.1.1":"2017-05-31T19:27:38.205Z","4.1.2":"2017-06-07T17:15:39.257Z","4.1.3":"2017-06-21T23:04:17.083Z","4.1.4":"2017-07-24T17:06:12.232Z","4.1.5":"2017-07-25T06:34:51.710Z","4.2.0":"2017-07-27T22:36:15.312Z","4.3.0":"2017-08-17T21:05:32.975Z","4.3.1":"2017-09-07T20:43:40.431Z","4.4.0":"2017-09-21T23:31:47.048Z","4.5.0":"2017-10-03T14:58:54.477Z","4.5.1":"2017-10-12T20:32:03.889Z","4.5.2":"2017-10-16T14:25:58.145Z","4.6.0":"2017-10-19T22:13:33.167Z","4.6.1":"2017-11-02T22:11:32.406Z","4.6.2":"2017-11-09T23:31:42.860Z","4.7.0":"2017-11-30T21:20:25.909Z","4.8.0":"2017-12-07T23:34:42.034Z","4.8.1":"2017-12-19T00:16:00.218Z","4.8.2-0":"2018-01-09T22:01:12.049Z","4.8.2":"2018-01-11T19:36:31.368Z","4.9.0-0":"2018-01-17T17:06:35.815Z","4.9.0-1":"2018-01-17T17:28:35.044Z","4.9.0-2":"2018-01-17T17:36:49.270Z","4.9.0":"2018-01-18T23:42:32.285Z","4.9.0-canary.c647fe4":"2018-01-25T19:23:21.426Z","4.9.0-canary.81d6b1e":"2018-01-26T21:08:38.093Z","4.9.0-canary.fca1076":"2018-01-26T22:42:28.583Z","4.9.0-canary.fcc77c2":"2018-01-29T17:19:05.865Z","4.9.1-0":"2018-01-31T00:55:18.227Z","4.9.0-canary.bcc8983":"2018-02-01T04:28:47.063Z","4.9.0-canary.8f76c28":"2018-02-01T14:36:25.443Z","4.9.0-canary.9fb3c4c":"2018-02-01T23:54:41.413Z","4.9.1":"2018-02-02T00:02:27.145Z","4.9.1-canary.631e1ad":"2018-02-02T00:24:05.692Z","4.9.1-canary.49dcb25":"2018-02-02T19:12:24.039Z","4.9.1-canary.2db58a0":"2018-02-05T23:59:42.239Z","4.9.1-canary.a1e346f":"2018-02-06T20:40:25.524Z","4.9.1-canary.453677f":"2018-02-07T02:27:33.248Z","4.9.1-canary.7a611b6":"2018-02-08T22:34:24.420Z","4.9.1-canary.fce4168":"2018-02-12T00:02:35.981Z","4.9.1-canary.515eff7":"2018-02-12T21:14:20.005Z","4.9.1-canary.f173ad0":"2018-02-13T17:50:13.656Z","4.9.1-canary.2cacc75":"2018-02-13T19:00:39.229Z","4.10.0-0":"2018-02-14T00:08:11.118Z","4.9.1-canary.db389db":"2018-02-14T00:39:31.378Z","4.10.0":"2018-02-16T00:32:00.956Z","4.10.0-canary.2e147ff":"2018-02-16T22:11:30.787Z","4.10.0-canary.b6b4e2f":"2018-02-16T22:17:43.096Z","4.10.1-0":"2018-02-21T00:24:46.395Z","4.10.0-canary.dbe5fff":"2018-02-21T00:34:21.589Z","4.10.0-canary.e784110":"2018-02-21T00:34:57.340Z","4.10.0-canary.3aec5ac":"2018-02-21T18:34:57.322Z","4.10.1-1":"2018-02-21T21:43:18.144Z","4.10.0-canary.3ee5bdf":"2018-02-21T22:01:08.734Z","4.10.0-canary.0226ed2":"2018-02-22T00:22:57.528Z","4.10.1-2":"2018-02-22T00:36:14.107Z","4.10.0-canary.cde4e44":"2018-02-22T00:48:46.300Z","4.10.1":"2018-02-22T22:22:17.724Z","4.10.1-canary.9cda9c9":"2018-02-27T18:34:00.514Z","4.10.1-canary.3d6289d":"2018-02-28T19:30:22.282Z","4.10.1-canary.fbb2aab":"2018-02-28T20:32:19.341Z","4.10.1-canary.dbed689":"2018-03-01T18:06:52.075Z","4.10.1-canary.aba869c":"2018-03-02T22:29:10.799Z","4.10.1-canary.0fa319e":"2018-03-03T01:45:55.066Z","4.10.1-canary.a0583f7":"2018-03-05T19:10:21.155Z","4.10.1-canary.03d224f":"2018-03-06T20:46:31.971Z","4.11.0-0":"2018-03-06T23:04:51.866Z","4.10.1-canary.121c167":"2018-03-06T23:19:49.988Z","4.10.1-canary.7681d03":"2018-03-07T22:50:05.020Z","4.11.0":"2018-03-08T22:50:51.076Z","4.11.0-canary.6aed77a":"2018-03-08T23:10:03.950Z","4.11.0-canary.69c9a97":"2018-03-08T23:29:47.405Z","4.11.0-canary.786082d":"2018-03-12T18:53:46.037Z","4.11.0-canary.0c5cbe0":"2018-03-14T21:32:52.453Z","4.11.0-canary.bf7a221":"2018-03-14T21:47:28.761Z","4.11.0-canary.b949d81":"2018-03-14T23:49:50.972Z","4.11.0-canary.1b3ba41":"2018-03-15T17:41:13.501Z","4.11.0-canary.df183a5":"2018-03-15T19:35:39.566Z","4.12.0-0":"2018-03-15T23:28:01.962Z","4.11.0-canary.d3ec2e0":"2018-03-16T18:30:34.025Z","4.11.0-canary.9d00c6f":"2018-03-19T16:16:01.076Z","4.11.0-canary.c25e7a1":"2018-03-19T18:17:09.642Z","4.11.0-canary.908227c":"2018-03-19T19:57:29.030Z","4.11.0-canary.d59b7249":"2018-03-20T17:54:31.708Z","4.11.0-canary.d59b724":"2018-03-20T18:12:27.768Z","4.12.0":"2018-03-20T18:12:33.907Z","4.12.0-canary.563e048":"2018-03-20T21:09:30.568Z","4.12.0-canary.84896ec":"2018-03-21T18:45:06.430Z","4.12.0-canary.ab0faeb":"2018-03-22T18:01:05.573Z","4.12.0-canary.8a10e7c":"2018-03-22T23:45:52.928Z","4.12.0-canary.bb93e47":"2018-03-24T00:01:24.888Z","4.12.0-canary.d90beab":"2018-03-24T01:19:46.492Z","4.12.0-canary.faa54d8":"2018-03-26T20:21:45.470Z","4.12.1-0":"2018-03-27T20:22:25.609Z","4.12.0-canary.a538b83":"2018-03-28T16:26:37.440Z","4.12.0-canary.dd86fc7":"2018-03-28T19:25:31.032Z","4.12.1-1":"2018-03-28T20:55:59.298Z","4.12.0-canary.3259004":"2018-03-28T21:06:04.543Z","4.12.0-canary.ac4dac3":"2018-03-28T23:20:11.235Z","4.12.0-canary.babd759":"2018-03-29T00:00:50.315Z","4.12.0-canary.b146780":"2018-03-29T17:02:26.813Z","4.12.1":"2018-03-29T22:05:32.308Z","4.12.1-canary.541fbbe":"2018-03-30T00:50:56.784Z","4.12.1-canary.b5aa5b8":"2018-03-30T02:40:02.178Z","4.12.1-canary.1608edb":"2018-03-30T19:17:06.429Z","4.12.1-canary.92f3809":"2018-04-02T16:39:56.578Z","4.12.1-canary.790c158":"2018-04-03T00:20:57.982Z","4.12.1-canary.4f28096":"2018-04-03T10:43:34.873Z","4.12.1-canary.2a0a33f":"2018-04-04T10:30:21.120Z","4.13.0-0":"2018-04-04T16:58:38.365Z","4.12.1-canary.073cc19":"2018-04-04T17:56:04.888Z","4.12.1-canary.8c54f6a":"2018-04-04T18:36:20.468Z","4.12.1-canary.a1020bf":"2018-04-05T18:21:16.486Z","4.12.1-canary.7857c21":"2018-04-05T21:43:50.648Z","4.12.1-canary.12e839d":"2018-04-05T21:46:34.862Z","4.12.1-canary.b45baec":"2018-04-06T13:11:28.161Z","4.12.1-canary.9eace31":"2018-04-06T16:48:57.060Z","4.12.1-canary.1f985cf":"2018-04-06T19:07:27.411Z","4.12.1-canary.5e71095":"2018-04-06T19:36:21.557Z","4.12.1-canary.6754b7f":"2018-04-07T11:10:48.229Z","4.12.1-canary.fce6f7a":"2018-04-08T17:11:42.106Z","4.12.1-canary.5475383":"2018-04-09T18:59:11.170Z","4.12.1-canary.f95425f":"2018-04-09T19:11:03.346Z","4.12.1-canary.1e3254d":"2018-04-09T19:46:16.457Z","4.12.1-canary.fe0d694":"2018-04-09T22:16:15.467Z","4.12.1-canary.4907285":"2018-04-10T16:17:27.232Z","4.13.0-1":"2018-04-10T17:17:53.891Z","4.13.0-2":"2018-04-10T17:59:38.166Z","4.12.1-canary.452a4be":"2018-04-10T18:52:21.078Z","4.12.1-canary.eeab13f":"2018-04-10T22:14:51.938Z","4.13.0-3":"2018-04-10T23:19:36.190Z","4.12.1-canary.14c2c4a":"2018-04-10T23:33:07.350Z","4.12.1-canary.3fe3d2c":"2018-04-11T00:16:40.577Z","4.12.1-canary.ca57c4d":"2018-04-11T00:18:47.127Z","4.12.1-canary.d0a614c":"2018-04-11T00:35:09.178Z","4.12.1-canary.7463443":"2018-04-11T14:35:47.861Z","4.12.1-canary.3327845":"2018-04-11T17:02:40.727Z","4.12.1-canary.078f83a":"2018-04-11T18:27:45.900Z","4.12.1-canary.00659ca":"2018-04-11T19:02:34.072Z","4.13.0-4":"2018-04-12T21:03:06.007Z","4.12.1-canary.aaee15d":"2018-04-12T21:13:16.709Z","4.12.1-canary.27a77fd":"2018-04-12T22:00:37.910Z","4.12.1-canary.8b29658":"2018-04-12T22:09:02.340Z","4.12.1-canary.231110c":"2018-04-12T22:43:37.088Z","4.12.1-canary.05e05b8":"2018-04-13T02:58:55.577Z","4.12.1-canary.eaec0b8":"2018-04-13T21:29:46.181Z","4.12.1-canary.92aea91":"2018-04-13T23:59:17.611Z","4.12.1-canary.4560599":"2018-04-14T00:18:34.656Z","4.13.0-5":"2018-04-16T18:35:55.902Z","4.13.0-6":"2018-04-17T18:46:10.829Z","4.13.0-7":"2018-04-17T21:12:47.562Z","4.12.1-canary.ffcaf85":"2018-04-17T21:32:53.754Z","4.12.1-canary.fcb277a":"2018-04-18T11:00:14.236Z","4.13.0":"2018-04-19T21:49:53.961Z","4.12.1-canary.6991857":"2018-04-19T22:04:40.784Z","4.13.0-canary.fd99689":"2018-04-20T19:35:09.126Z","4.13.1":"2018-04-20T19:40:53.896Z","4.13.1-canary.bfa8a5e":"2018-04-21T01:11:52.261Z","4.13.1-canary.2471497":"2018-04-25T12:18:59.006Z","4.13.1-canary.0e141c0":"2018-04-25T19:27:34.997Z","4.13.1-canary.b60ffff":"2018-04-25T21:20:02.641Z","4.13.1-canary.4b4eebc":"2018-04-26T01:05:34.945Z","4.13.1-canary.8d1f1bf":"2018-04-30T17:17:15.158Z","4.13.1-canary.b28c74f":"2018-04-30T19:33:30.945Z","4.13.1-canary.8251c17":"2018-04-30T21:40:59.636Z","4.13.1-canary.5f3716d":"2018-05-01T00:02:00.683Z","4.13.1-canary.9751e46":"2018-05-01T16:33:30.992Z","4.13.1-canary.66980bd":"2018-05-01T17:10:01.600Z","4.13.1-canary.7edf649":"2018-05-01T17:10:15.281Z","5.0.0-0":"2018-05-01T18:53:29.858Z","4.13.1-canary.2de84e5":"2018-05-02T00:53:14.191Z","4.13.1-canary.533e576":"2018-05-02T13:10:57.976Z","4.13.1-canary.de6750b":"2018-05-02T16:17:08.357Z","4.13.1-canary.099688f":"2018-05-02T16:38:23.872Z","4.13.1-canary.4ffc979":"2018-05-02T18:22:07.563Z","5.0.0-1":"2018-05-02T18:43:45.824Z","4.13.1-canary.fa5d157":"2018-05-02T18:53:10.235Z","4.13.1-canary.f096ba0":"2018-05-02T22:31:33.130Z","4.13.1-canary.dfd09bc":"2018-05-03T01:12:31.737Z","4.13.1-canary.7764746":"2018-05-03T09:45:34.955Z","5.0.0-2":"2018-05-03T21:05:33.008Z","4.13.1-canary.7f4ae1f":"2018-05-03T21:34:19.991Z","4.13.1-canary.a413ec2":"2018-05-05T00:08:45.255Z","4.13.1-canary.e441ffb":"2018-05-07T18:12:29.852Z","4.13.1-canary.238fabe":"2018-05-07T18:39:05.807Z","4.13.1-canary.403c123":"2018-05-07T19:51:45.314Z","5.0.0-3":"2018-05-07T21:49:49.982Z","4.13.1-canary.84686ba":"2018-05-08T14:07:38.617Z","4.13.1-canary.21f83a6":"2018-05-08T16:24:42.032Z","5.0.0":"2018-05-08T17:34:23.550Z","5.0.1":"2018-05-08T19:10:29.765Z","5.0.0-canary.b351749":"2018-05-08T19:30:59.234Z","5.0.0-canary.785cc8b":"2018-05-08T19:32:38.581Z","5.0.1-canary.8922c3a":"2018-05-08T20:24:04.099Z","5.0.1-canary.e91742d":"2018-05-09T16:26:46.837Z","5.0.1-canary.9fd0229":"2018-05-09T18:25:25.736Z","5.0.1-canary.3110d6b":"2018-05-09T20:51:15.921Z","5.0.1-canary.dd69371":"2018-05-10T16:50:37.112Z","5.0.1-canary.44de46d":"2018-05-10T17:35:28.327Z","5.0.1-canary.e04cfb1":"2018-05-10T19:00:51.353Z","5.0.2-0":"2018-05-10T19:51:09.844Z","5.0.1-canary.97a3727":"2018-05-10T20:14:15.670Z","5.0.2":"2018-05-10T20:35:36.450Z","5.0.1-canary.bd01dfe":"2018-05-10T20:56:02.001Z","5.0.2-canary.c150044":"2018-05-11T18:43:07.846Z","5.0.2-canary.4ff990a":"2018-05-12T07:26:00.664Z","5.0.2-canary.6a95a7a":"2018-05-15T18:00:55.064Z","5.0.2-canary.dd11cd1":"2018-05-15T18:33:58.883Z","5.0.3-0":"2018-05-15T18:49:37.168Z","5.0.2-canary.611949d":"2018-05-15T19:44:36.651Z","5.0.2-canary.1c5258c":"2018-05-15T23:52:18.240Z","5.0.2-canary.fbd5bd6":"2018-05-16T00:42:29.673Z","5.0.2-canary.7e7d36e":"2018-05-16T21:52:47.319Z","5.0.2-canary.5b59d75":"2018-05-16T23:01:43.986Z","5.0.2-canary.2e5aa28":"2018-05-16T23:19:11.135Z","5.0.2-canary.c660c35":"2018-05-17T19:06:05.335Z","5.0.3":"2018-05-17T21:12:56.909Z","5.0.3-canary.3fa62ef":"2018-05-18T18:36:36.774Z","5.0.3-canary.f6fd8f5":"2018-05-18T22:16:18.995Z","5.0.3-canary.e9caf33":"2018-05-21T18:13:36.983Z","5.0.3-canary.d068bc5":"2018-05-21T19:28:43.141Z","5.0.3-canary.9556469":"2018-05-21T21:03:09.669Z","5.0.3-canary.2622286":"2018-05-22T19:05:24.324Z","5.0.3-canary.b658d8c":"2018-05-22T21:07:06.201Z","5.0.4-0":"2018-05-22T22:27:57.434Z","5.0.3-canary.47625d7":"2018-05-22T22:32:01.784Z","5.0.3-canary.916c692":"2018-05-23T00:13:47.895Z","5.0.3-canary.4d16f51":"2018-05-23T18:04:18.295Z","5.0.3-canary.b10c057":"2018-05-24T18:12:28.799Z","5.0.4":"2018-05-24T22:57:55.143Z","5.0.4-canary.a08cfe6":"2018-05-25T21:17:59.800Z","5.0.4-canary.96a1092":"2018-05-25T23:01:32.578Z","5.0.4-canary.2f7375a":"2018-05-30T17:39:18.520Z","5.0.4-canary.3e806ca":"2018-05-30T21:38:18.252Z","5.0.4-canary.233161d":"2018-05-31T15:50:59.107Z","5.0.4-canary.236d4d0":"2018-06-01T00:32:21.168Z","5.0.4-canary.23c576e":"2018-06-01T23:28:03.974Z","5.0.4-canary.4673f7d":"2018-06-04T15:27:11.803Z","5.0.4-canary.5e82b60":"2018-06-04T17:24:39.801Z","5.0.4-canary.9534831":"2018-06-05T20:11:08.517Z","5.0.4-canary.4ca7bdf":"2018-06-11T18:01:30.306Z","5.0.4-canary.c2ffbde":"2018-06-12T18:46:22.318Z","5.0.4-canary.c808a57":"2018-06-13T16:24:27.685Z","5.1.0-0":"2018-06-13T18:00:01.578Z"},"tags":{"latest":"5.0.4","next":"5.1.0-0","canary":"5.0.4-canary.c808a57"},"description":"Firebase JavaScript library for web and Node.js","dependencies":{"@firebase/app":"0.3.3","@firebase/auth":"0.5.3","@firebase/database":"0.3.3","@firebase/firestore":"0.5.4","@firebase/functions":"0.2.4","@firebase/messaging":"0.3.4","@firebase/polyfill":"0.3.3","@firebase/storage":"0.2.3"},"devDependencies":{"rollup":"0.57.1","rollup-plugin-commonjs":"9.1.0","rollup-plugin-node-resolve":"3.3.0","rollup-plugin-typescript2":"0.12.0","rollup-plugin-uglify":"3.0.0","typescript":"2.8.1"},"repository":{"url":"https://github.com/firebase/firebase-js-sdk","project":"firebase-js-sdk","user":"firebase","host":"github.com","path":"","branch":"master"},"githubRepo":{"user":"firebase","project":"firebase-js-sdk","path":"","head":"master"},"gitHead":"master","readme":"","owner":{"name":"firebase","avatar":"https://github.com/firebase.png","link":"https://github.com/firebase"},"deprecated":false,"homepage":"https://firebase.google.com/","license":"Apache-2.0","keywords":["authentication","database","Firebase","firebase","realtime","storage"],"computedKeywords":[],"computedMetadata":{},"created":1329868672588,"modified":1528912804408,"lastPublisher":{"name":"jshcrowthe","email":"jshcrowthe@gmail.com","avatar":"https://gravatar.com/avatar/d4c1f4110ad5218b764afd5778f6cea9","link":"https://www.npmjs.com/~jshcrowthe"},"owners":[{"email":"operations+plainlogo@firebase.com","name":"firebase-ops","avatar":"https://gravatar.com/avatar/48965da2c75390e8c486058c282b35cd","link":"https://www.npmjs.com/~firebase-ops"},{"email":"jshcrowthe@gmail.com","name":"jshcrowthe","avatar":"https://gravatar.com/avatar/d4c1f4110ad5218b764afd5778f6cea9","link":"https://www.npmjs.com/~jshcrowthe"},{"email":"vsnijjar+npmjs@gmail.com","name":"vikrum","avatar":"https://gravatar.com/avatar/f4428f92e8160f70b9a9d0812f6b8ff9","link":"https://www.npmjs.com/~vikrum"}],"lastCrawl":"2018-06-13T18:00:10.615Z","_searchInternal":{"concatenatedName":"firebase","alternativeNames":["firebase","firebase","firebase"],"downloadsMagnitude":6},"dependents":698,"humanDependents":"698","changelogFilename":null,"objectID":"firebase","_highlightResult":{"name":{"value":"<em>fireba</em>se","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]},"description":{"value":"<em>Fireba</em>se JavaScript library for web and Node.js","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]},"owner":{"name":{"value":"<em>fireba</em>se","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]}},"keywords":[{"value":"authentication","matchLevel":"none","matchedWords":[]},{"value":"database","matchLevel":"none","matchedWords":[]},{"value":"<em>Fireba</em>se","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]},{"value":"<em>fireba</em>se","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]},{"value":"realtime","matchLevel":"none","matchedWords":[]},{"value":"storage","matchLevel":"none","matchedWords":[]}],"owners":[{"name":{"value":"<em>fireba</em>se-ops","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]}},{"name":{"value":"jshcrowthe","matchLevel":"none","matchedWords":[]}},{"name":{"value":"vikrum","matchLevel":"none","matchedWords":[]}}],"_searchInternal":{"alternativeNames":[{"value":"<em>fireba</em>se","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]},{"value":"<em>fireba</em>se","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]},{"value":"<em>fireba</em>se","matchLevel":"full","fullyHighlighted":false,"matchedWords":["fireba"]}]}}},"aws-xray-sdk":{"name":"aws-xray-sdk","downloadsLast30Days":62316,"downloadsRatio":0.0003910249613849376,"humanDownloadsLast30Days":"62.3k","popular":false,"version":"1.2.0","versions":{"1.0.0-beta":"2016-12-01T17:15:20.584Z","1.0.1-beta":"2017-01-24T23:00:15.256Z","1.0.2-beta":"2017-01-24T23:18:11.145Z","1.0.3-beta":"2017-01-24T23:34:37.855Z","1.0.4-beta":"2017-01-28T01:33:41.738Z","1.0.5-beta":"2017-03-06T19:15:33.001Z","1.0.6-beta":"2017-03-30T20:58:45.754Z","1.1.0":"2017-04-19T05:40:43.897Z","1.1.1":"2017-05-17T23:11:20.587Z","1.1.2":"2017-06-29T21:13:15.055Z","1.1.3":"2017-08-09T21:31:56.939Z","1.1.4":"2017-09-01T18:13:01.080Z","1.1.5":"2017-11-09T21:48:26.880Z","1.1.6":"2017-11-10T05:57:51.163Z","1.1.7":"2018-01-13T00:14:23.560Z","1.2.0":"2018-02-08T22:10:04.776Z"},"tags":{"latest":"1.2.0"},"description":"AWS X-Ray SDK for Javascript","dependencies":{"aws-xray-sdk-core":"^1.2.0","aws-xray-sdk-express":"^1.2.0","aws-xray-sdk-mysql":"^1.2.0","aws-xray-sdk-postgres":"^1.2.0","pkginfo":"^0.4.0"},"devDependencies":{},"repository":{"url":"https://github.com/aws/aws-xray-sdk-node/tree/master/packages/full_sdk","host":"github.com","user":"aws","project":"aws-xray-sdk-node","path":"/tree/master/packages/full_sdk","branch":"master"},"githubRepo":{"user":"aws","project":"aws-xray-sdk-node","path":"/tree/master/packages/full_sdk","head":"master"},"gitHead":"master","readme":"\n## Requirements\n\nAWS SDK v2.7.15 or greater (if using `captureAWS` or `captureAWSClient`)\nExpress 4.14.0 or greater (if using Express and the associated X-Ray middleware)\nMySQL 2.12.0 or greater (if using `captureMySQL`)\nPostgres 6.1.0 or greater (if using `capturePostgres`)\n\n## AWS X-Ray\n\nThe AWS X-Ray SDK automatically records information for incoming and outgoing requests and responses (via middleware), as well as local data\nsuch as function calls, time, variables (via metadata and annotations), even EC2 instance data (via plugins).\n\nAlthough the AWS X-Ray SDK was originally intended to capture request/response data on a web app, the SDK provides functionality for use cases\noutside this as well. The SDK exposes the 'Segment' and 'Subsegment' objects to create your own capturing mechanisms, middleware, etc.\n\nThis package includes all other AWS X-Ray packages except `aws-xray-sdk-restify` which is still in beta.\n\n    aws-xray-sdk-core\n    aws-xray-sdk-express\n    aws-xray-sdk-postgres\n    aws-xray-sdk-mysql\n\n## Setup\n\nThe core package contains the base SDK functionality.  Please see the aws-xray-sdk-core [README.md](https://github.com/aws/aws-xray-sdk-node/tree/master/packages/core/README.md) for more details.\n\n### Support for web frameworks\n\n* [Express](https://github.com/aws/aws-xray-sdk-node/tree/master/packages/express)\n* [Restify](https://github.com/aws/aws-xray-sdk-node/tree/master/packages/restify)(beta)\n","owner":{"name":"aws","avatar":"https://github.com/aws.png","link":"https://github.com/aws"},"deprecated":false,"homepage":null,"license":"Apache-2.0","keywords":["amazon","api","aws","xray","x-ray","x ray"],"computedKeywords":[],"computedMetadata":{},"created":1480612520584,"modified":1523901573534,"lastPublisher":{"name":"haotianw465","email":"wht465@gmail.com","avatar":"https://gravatar.com/avatar/3802834650513e82820b57f38c4b2bcf","link":"https://www.npmjs.com/~haotianw465"},"owners":[{"email":"aws-sdk-js@amazon.com","name":"aws-sdk-team","avatar":"https://gravatar.com/avatar/16f9adb87f8922408b5cf97e814feebf","link":"https://www.npmjs.com/~aws-sdk-team"},{"email":"brett.j.andrews@gmail.com","name":"brettstack","avatar":"https://gravatar.com/avatar/3702e3e471e366a7f1df991ab300b9f0","link":"https://www.npmjs.com/~brettstack"},{"email":"wht465@gmail.com","name":"haotianw465","avatar":"https://gravatar.com/avatar/3802834650513e82820b57f38c4b2bcf","link":"https://www.npmjs.com/~haotianw465"},{"email":"gkwicker@amazon.com","name":"gkwicker.amazon","avatar":"https://gravatar.com/avatar/2c2afbedff60899b9d9dcd19004fe98b","link":"https://www.npmjs.com/~gkwicker.amazon"},{"email":"awati@amazon.com","name":"yogiraj07","avatar":"https://gravatar.com/avatar/5e6edabc7ed165c31ca3a91aae6d9497","link":"https://www.npmjs.com/~yogiraj07"},{"email":"fengsong@amazon.com","name":"aws-iot-sdk","avatar":"https://gravatar.com/avatar/abeec3757530d265493a326210b43f28","link":"https://www.npmjs.com/~aws-iot-sdk"},{"email":"aws-xray-sdk-node@amazon.com","name":"awsxray","avatar":"https://gravatar.com/avatar/d7d9eba93de470d31479e59633a1899c","link":"https://www.npmjs.com/~awsxray"},{"email":"mcmuls@amazon.com","name":"awssandra","avatar":"https://gravatar.com/avatar/1d7e5ea6e5fb2516007545e43bcbc718","link":"https://www.npmjs.com/~awssandra"},{"email":"cjradek@gmail.com","name":"cjradek","avatar":"https://gravatar.com/avatar/efe16494b77a287b1c0fe2eee10f00fa","link":"https://www.npmjs.com/~cjradek"},{"email":"aws-sdk-js@amazon.com","name":"aws-sdk-bot","avatar":"https://gravatar.com/avatar/16f9adb87f8922408b5cf97e814feebf","link":"https://www.npmjs.com/~aws-sdk-bot"},{"email":"jonathan@jeskew.net","name":"jsq","avatar":"https://gravatar.com/avatar/36f2bc3bbec8b7e6352b87becd87583d","link":"https://www.npmjs.com/~jsq"},{"email":"osa-3p@amazon.com","name":"amzn-oss","avatar":"https://gravatar.com/avatar/bea6de18f40c3aeb455572e171bbcafc","link":"https://www.npmjs.com/~amzn-oss"}],"lastCrawl":"2018-06-04T08:27:38.484Z","_searchInternal":{"concatenatedName":"awsxraysdk","alternativeNames":["awsxraysdk","aws xray sdk","aws-xray-sdk"],"downloadsMagnitude":5},"dependents":20,"humanDependents":"20","changelogFilename":"https://raw.githubusercontent.com/aws/aws-xray-sdk-node/master/packages/full_sdk/CHANGELOG.md","objectID":"aws-xray-sdk","_highlightResult":{"name":{"value":"<em>aws-xray-sdk</em>","matchLevel":"full","fullyHighlighted":false,"matchedWords":["aws","x","ray"]},"description":{"value":"<em>AWS X-Ray</em> SDK for Javascript","matchLevel":"full","fullyHighlighted":false,"matchedWords":["aws","x","ray"]},"owner":{"name":{"value":"<em>aws</em>","matchLevel":"partial","fullyHighlighted":true,"matchedWords":["aws"]}},"keywords":[{"value":"amazon","matchLevel":"none","matchedWords":[]},{"value":"api","matchLevel":"none","matchedWords":[]},{"value":"<em>aws</em>","matchLevel":"partial","fullyHighlighted":true,"matchedWords":["aws"]},{"value":"xray","matchLevel":"none","matchedWords":[]},{"value":"<em>x</em>-<em>ray</em>","matchLevel":"partial","fullyHighlighted":true,"matchedWords":["x","ray"]},{"value":"<em>x</em> <em>ray</em>","matchLevel":"partial","fullyHighlighted":true,"matchedWords":["x","ray"]}],"owners":[{"name":{"value":"<em>aws</em>-sdk-team","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["aws"]}},{"name":{"value":"brettstack","matchLevel":"none","matchedWords":[]}},{"name":{"value":"haotianw465","matchLevel":"none","matchedWords":[]}},{"name":{"value":"gkwicker.amazon","matchLevel":"none","matchedWords":[]}},{"name":{"value":"yogiraj07","matchLevel":"none","matchedWords":[]}},{"name":{"value":"<em>aws</em>-iot-sdk","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["aws"]}},{"name":{"value":"<em>awsxray</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["aws","x","ray"]}},{"name":{"value":"awssandra","matchLevel":"none","matchedWords":[]}},{"name":{"value":"cjradek","matchLevel":"none","matchedWords":[]}},{"name":{"value":"<em>aws</em>-sdk-bot","matchLevel":"partial","fullyHighlighted":false,"matchedWords":["aws"]}},{"name":{"value":"jsq","matchLevel":"none","matchedWords":[]}},{"name":{"value":"amzn-oss","matchLevel":"none","matchedWords":[]}}],"_searchInternal":{"alternativeNames":[{"value":"<em>awsxray</em>sdk","matchLevel":"full","fullyHighlighted":false,"matchedWords":["aws","x","ray"]},{"value":"<em>aws xray sdk</em>","matchLevel":"full","fullyHighlighted":false,"matchedWords":["aws","x","ray"]},{"value":"<em>aws-xray-sdk</em>","matchLevel":"full","fullyHighlighted":false,"matchedWords":["aws","x","ray"]}]}}},"axios":{"name":"axios","downloadsLast30Days":6708532,"downloadsRatio":0.04209518368075001,"humanDownloadsLast30Days":"6.7m","popular":true,"version":"0.18.0","versions":{"0.1.0":"2014-08-29T23:08:36.810Z","0.2.0":"2014-09-12T20:06:33.167Z","0.2.1":"2014-09-12T22:57:28.872Z","0.2.2":"2014-09-15T03:30:45.994Z","0.3.0":"2014-09-16T18:20:18.668Z","0.3.1":"2014-09-17T00:31:29.538Z","0.4.0":"2014-10-05T23:55:03.069Z","0.4.1":"2014-10-15T18:19:42.549Z","0.4.2":"2014-12-11T07:14:52.563Z","0.5.0":"2015-01-23T10:15:47.657Z","0.5.1":"2015-03-10T20:47:18.932Z","0.5.2":"2015-03-13T23:14:22.809Z","0.5.3":"2015-04-08T03:01:17.936Z","0.5.4":"2015-04-08T18:49:41.745Z","0.6.0":"2015-09-21T20:20:20.241Z","0.7.0":"2015-09-29T06:36:55.850Z","0.8.0":"2015-12-11T19:09:50.663Z","0.8.1":"2015-12-15T03:44:16.229Z","0.9.0":"2016-01-18T18:19:24.356Z","0.9.1":"2016-01-24T22:19:01.689Z","0.10.0":"2016-04-21T04:52:22.553Z","0.11.0":"2016-04-27T04:19:52.831Z","0.11.1":"2016-05-17T15:59:30.342Z","0.12.0":"2016-06-01T05:22:58.397Z","0.13.0":"2016-07-13T19:42:43.558Z","0.13.1":"2016-07-16T17:13:24.859Z","0.14.0":"2016-08-27T18:30:22.182Z","0.15.0":"2016-10-11T04:40:41.633Z","0.15.1":"2016-10-15T06:39:23.761Z","0.15.2":"2016-10-18T01:33:20.989Z","0.15.3":"2016-11-27T21:59:11.250Z","0.16.0":"2017-04-01T02:31:09.040Z","0.16.1":"2017-04-08T18:51:59.217Z","0.16.2":"2017-06-03T19:29:23.765Z","0.17.0":"2017-10-21T18:01:30.232Z","0.17.1":"2017-11-11T23:24:40.635Z","0.18.0":"2018-02-19T23:28:54.151Z"},"tags":{"latest":"0.18.0"},"description":"Promise based HTTP client for the browser and node.js","dependencies":{"follow-redirects":"^1.3.0","is-buffer":"^1.1.5"},"devDependencies":{"bundlesize":"^0.5.7","coveralls":"^2.11.9","es6-promise":"^4.0.5","grunt":"^1.0.1","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.0.0","grunt-contrib-nodeunit":"^1.0.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^19.0.0","grunt-karma":"^2.0.0","grunt-ts":"^6.0.0-beta.3","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-coverage":"^1.0.0","karma-firefox-launcher":"^1.0.0","karma-jasmine":"^1.0.2","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.1.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","sinon":"^1.17.4","webpack":"^1.13.1","webpack-dev-server":"^1.14.1","url-search-params":"^0.6.1","typescript":"^2.0.3"},"repository":{"url":"https://github.com/axios/axios","project":"axios","user":"axios","host":"github.com","path":"","head":"d59c70fdfd35106130e9f783d0dbdcddd145b58f","branch":"d59c70fdfd35106130e9f783d0dbdcddd145b58f"},"githubRepo":{"user":"axios","project":"axios","path":"","head":"d59c70fdfd35106130e9f783d0dbdcddd145b58f"},"gitHead":"d59c70fdfd35106130e9f783d0dbdcddd145b58f","readme":"# axios\n\n[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)\n[![build status](https://img.shields.io/travis/axios/axios.svg?style=flat-square)](https://travis-ci.org/axios/axios)\n[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)\n[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](http://npm-stat.com/charts.html?package=axios)\n[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)\n[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)\n\nPromise based HTTP client for the browser and node.js\n\n## Features\n\n- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser\n- Make [http](http://nodejs.org/api/http.html) requests from node.js\n- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API\n- Intercept request and response\n- Transform request and response data\n- Cancel requests\n- Automatic transforms for JSON data\n- Client side support for protecting against [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\n--- | --- | --- | --- | --- | --- |\nLatest â | Latest â | Latest â | Latest â | Latest â | 8+ â |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing cdn:\n\n```html\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n```\n\n## Example\n\nPerforming a `GET` request\n\n```js\n// Make a request for a user with a given ID\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n\n// Optionally the request above could also be done as\naxios.get('/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\nPerforming a `POST` request\n\n```js\naxios.post('/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\nPerforming multiple concurrent requests\n\n```js\nfunction getUserAccount() {\n  return axios.get('/user/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('/user/12345/permissions');\n}\n\naxios.all([getUserAccount(), getUserPermissions()])\n  .then(axios.spread(function (acct, perms) {\n    // Both requests are now complete\n  }));\n```\n\n## axios API\n\nRequests can be made by passing the relevant config to `axios`.\n\n##### axios(config)\n\n```js\n// Send a POST request\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n```\n\n```js\n// GET request for remote image\naxios({\n  method:'get',\n  url:'http://bit.ly/2mTM3nY',\n  responseType:'stream'\n})\n  .then(function(response) {\n  response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n});\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience aliases have been provided for all supported request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency\n\nHelper functions for dealing with concurrent requests.\n\n##### axios.all(iterable)\n##### axios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nvar instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `transformResponse` allows changes to the response data to be made before\n  // it is passed to then/catch\n  transformResponse: [function (data) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  // `paramsSerializer` is an optional function in charge of serializing `params`\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n  paramsSerializer: function(params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // When no `transformRequest` is set, must be of one of the following types:\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  // - Browser only: FormData, File, Blob\n  // - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000,\n\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n\n  // `adapter` allows custom handling of requests which makes testing easier.\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\n  adapter: function (config) {\n    /* ... */\n  },\n\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  // This will set an `Authorization` header, overwriting any existing\n  // `Authorization` custom headers you have set using `headers`.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  // `responseType` indicates the type of data that the server will respond with\n  // options are 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\n  responseType: 'json', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n  // `onUploadProgress` allows handling of progress events for uploads\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `onDownloadProgress` allows handling of progress events for downloads\n  onDownloadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `maxContentLength` defines the max size of the http response content allowed\n  maxContentLength: 2000,\n\n  // `validateStatus` defines whether to resolve or reject the promise for a given\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\n  // rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  },\n\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  // If set to 0, no redirects will be followed.\n  maxRedirects: 5, // default\n\n  // `socketPath` defines a UNIX Socket to be used in node.js.\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n  // Only either `socketPath` or `proxy` can be specified.\n  // If both are specified, `socketPath` is used.\n  socketPath: null, // default\n\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  // and https requests, respectively, in node.js. This allows options to be added like\n  // `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  // 'proxy' defines the hostname and port of the proxy server\n  // Use `false` to disable proxies, ignoring environment variables.\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  // supplies credentials.\n  // This will set an `Proxy-Authorization` header, overwriting any existing\n  // `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\n  // (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  })\n}\n```\n\n## Response Schema\n\nThe response for a request contains the following information.\n\n```js\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the headers that the server responded with\n  // All header names are lower cased\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance the browser\n  request: {}\n}\n```\n\nWhen using `then`, you will receive the response as follows:\n\n```js\naxios.get('/user/12345')\n  .then(function(response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\n```\n\nWhen using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.\n\n## Config Defaults\n\nYou can specify config defaults that will be applied to every request.\n\n### Global axios defaults\n\n```js\naxios.defaults.baseURL = 'https://api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n```\n\n### Custom instance defaults\n\n```js\n// Set config defaults when creating the instance\nvar instance = axios.create({\n  baseURL: 'https://api.example.com'\n});\n\n// Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n```\n\n### Config order of precedence\n\nConfig will be merged with an order of precedence. The order is library defaults found in [lib/defaults.js](https://github.com/axios/axios/blob/master/lib/defaults.js#L28), then `defaults` property of the instance, and finally `config` argument for the request. The latter will take precedence over the former. Here's an example.\n\n```js\n// Create an instance using the config defaults provided by the library\n// At this point the timeout config value is `0` as is the default for the library\nvar instance = axios.create();\n\n// Override timeout default for the library\n// Now all requests will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n// Override timeout for this request as it's known to take a long time\ninstance.get('/longRequest', {\n  timeout: 5000\n});\n```\n\n## Interceptors\n\nYou can intercept requests or responses before they are handled by `then` or `catch`.\n\n```js\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  });\n```\n\nIf you may need to remove an interceptor later you can.\n\n```js\nvar myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\n```\n\nYou can add interceptors to a custom instance of axios.\n\n```js\nvar instance = axios.create();\ninstance.interceptors.request.use(function () {/*...*/});\n```\n\n## Handling Errors\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n```\n\nYou can define a custom HTTP status code error range using the `validateStatus` config option.\n\n```js\naxios.get('/user/12345', {\n  validateStatus: function (status) {\n    return status < 500; // Reject only if the status code is greater than or equal to 500\n  }\n})\n```\n\n## Cancellation\n\nYou can cancel a request using a *cancel token*.\n\n> The axios cancel token API is based on the withdrawn [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises).\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nvar CancelToken = axios.CancelToken;\nvar source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function(thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\n```\n\nYou can also create a cancel token by passing an executor function to the `CancelToken` constructor:\n\n```js\nvar CancelToken = axios.CancelToken;\nvar cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n```\n\n> Note: you can cancel several requests with the same cancel token.\n\n## Using application/x-www-form-urlencoded format\n\nBy default, axios serializes JavaScript objects to `JSON`. To send data in the `application/x-www-form-urlencoded` format instead, you can use one of the following options.\n\n### Browser\n\nIn a browser, you can use the [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API as follows:\n\n```js\nvar params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('/foo', params);\n```\n\n> Note that `URLSearchParams` is not supported by all browsers (see [caniuse.com](http://www.caniuse.com/#feat=urlsearchparams)), but there is a [polyfill](https://github.com/WebReflection/url-search-params) available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the [`qs`](https://github.com/ljharb/qs) library:\n\n```js\nvar qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\n```\n\n### Node.js\n\nIn node.js, you can use the [`querystring`](https://nodejs.org/api/querystring.html) module as follows:\n\n```js\nvar querystring = require('querystring');\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\n```\n\nYou can also use the [`qs`](https://github.com/ljharb/qs) library.\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](http://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\naxios includes [TypeScript](http://typescriptlang.org) definitions.\n```typescript\nimport axios from 'axios';\naxios.get('/user?ID=12345');\n```\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/master/CHANGELOG.md)\n* [Upgrade Guide](https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md)\n* [Ecosystem](https://github.com/axios/axios/blob/master/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/master/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [Angular](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of Angular.\n\n## License\n\nMIT\n","owner":{"name":"axios","avatar":"https://github.com/axios.png","link":"https://github.com/axios"},"deprecated":false,"homepage":null,"license":"MIT","keywords":["xhr","http","ajax","promise","node"],"computedKeywords":[],"computedMetadata":{},"created":1409353716810,"modified":1526428697722,"lastPublisher":{"name":"emilyemorehouse","email":"emilyemorehouse@gmail.com","avatar":"https://gravatar.com/avatar/8bd5c7e278d89616b381107f33d9ba9c","link":"https://www.npmjs.com/~emilyemorehouse"},"owners":[{"name":"mzabriskie","email":"mzabriskie@gmail.com","avatar":"https://gravatar.com/avatar/eb1b97d30df2c314fa4bc90c92f9768c","link":"https://www.npmjs.com/~mzabriskie"},{"name":"nickuraltsev","email":"nick.uraltsev@gmail.com","avatar":"https://gravatar.com/avatar/fc0b308a8511639f1ddd42cf81feb6b5","link":"https://www.npmjs.com/~nickuraltsev"}],"lastCrawl":"2018-06-04T08:27:50.550Z","_searchInternal":{"concatenatedName":"axios","alternativeNames":["axios","axios","axios"],"popularName":"axios","downloadsMagnitude":7},"dependents":5935,"humanDependents":"5.9k","changelogFilename":"https://raw.githubusercontent.com/axios/axios/d59c70fdfd35106130e9f783d0dbdcddd145b58f/CHANGELOG.md","objectID":"axios","_highlightResult":{"name":{"value":"<em>axios</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["axios"]},"description":{"value":"Promise based HTTP client for the browser and node.js","matchLevel":"none","matchedWords":[]},"owner":{"name":{"value":"<em>axios</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["axios"]}},"keywords":[{"value":"xhr","matchLevel":"none","matchedWords":[]},{"value":"http","matchLevel":"none","matchedWords":[]},{"value":"ajax","matchLevel":"none","matchedWords":[]},{"value":"promise","matchLevel":"none","matchedWords":[]},{"value":"node","matchLevel":"none","matchedWords":[]}],"owners":[{"name":{"value":"mzabriskie","matchLevel":"none","matchedWords":[]}},{"name":{"value":"nickuraltsev","matchLevel":"none","matchedWords":[]}}],"_searchInternal":{"alternativeNames":[{"value":"<em>axios</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["axios"]},{"value":"<em>axios</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["axios"]},{"value":"<em>axios</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["axios"]}],"popularName":{"value":"<em>axios</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["axios"]}}}},"jszip":{"name":"jszip","downloadsLast30Days":1597870,"downloadsRatio":0.0100264306927298,"humanDownloadsLast30Days":"1.6m","popular":true,"version":"3.1.5","versions":{"0.1.0":"2013-09-11T15:25:47.145Z","0.1.1":"2013-09-11T15:41:43.030Z","0.2.0":"2013-09-25T01:00:44.009Z","0.2.1":"2013-09-30T19:35:38.335Z","2.0.0":"2014-02-06T19:30:56.795Z","2.1.0":"2014-02-06T19:31:08.303Z","2.1.1":"2014-02-13T00:42:21.891Z","2.2.0":"2014-02-26T10:24:08.455Z","2.2.1":"2014-04-24T19:48:27.080Z","2.2.2":"2014-05-01T21:05:40.198Z","2.3.0":"2014-06-18T22:02:40.426Z","2.4.0":"2014-07-25T17:57:13.835Z","2.5.0":"2015-03-12T01:59:14.066Z","2.6.0":"2016-03-23T21:18:05.861Z","3.0.0":"2016-04-13T19:32:35.807Z","2.6.1":"2016-07-28T19:46:44.662Z","3.1.0":"2016-08-03T20:08:51.050Z","3.1.1":"2016-08-08T18:57:19.135Z","3.1.2":"2016-08-23T18:55:43.473Z","3.1.3":"2016-10-06T19:14:04.275Z","3.1.4":"2017-08-24T17:33:35.015Z","3.1.5":"2017-11-09T22:40:10.176Z"},"tags":{"latest":"3.1.5"},"description":"Create, read and edit .zip files with JavaScript http://stuartk.com/jszip","dependencies":{"core-js":"~2.3.0","es6-promise":"~3.0.2","lie":"~3.1.0","pako":"~1.0.2","readable-stream":"~2.0.6"},"devDependencies":{"grunt":"~0.4.1","grunt-cli":"~1.1.0","grunt-saucelabs":"8.6.2","grunt-contrib-connect":"1.0.0","jshint":"~2.9.1","browserify":"~13.0.0","grunt-browserify":"~5.0.0","grunt-contrib-jshint":"~1.0.0","grunt-contrib-qunit":"~1.2.0","grunt-contrib-uglify":"~1.0.0","phantomjs-prebuilt":"2.1.15","jszip-utils":"~0.0.2","package-json-versionify":"1.0.2","qunit-cli":"~0.2.0","qunitjs":"~1.23.0","tmp":"0.0.28"},"repository":{"url":"https://github.com/Stuk/jszip","project":"jszip","user":"Stuk","host":"github.com","path":"","head":"a4138a23cb9b8eb773c19af7d36d5ce2bcf4bfda","branch":"a4138a23cb9b8eb773c19af7d36d5ce2bcf4bfda"},"githubRepo":{"user":"Stuk","project":"jszip","path":"","head":"a4138a23cb9b8eb773c19af7d36d5ce2bcf4bfda"},"gitHead":"a4138a23cb9b8eb773c19af7d36d5ce2bcf4bfda","readme":"JSZip [![Build Status](https://api.travis-ci.org/Stuk/jszip.svg?branch=master)](http://travis-ci.org/Stuk/jszip) [![Code Climate](https://codeclimate.com/github/Stuk/jszip/badges/gpa.svg)](https://codeclimate.com/github/Stuk/jszip)\n=====\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/jszip.svg)](https://saucelabs.com/u/jszip)\n\nA library for creating, reading and editing .zip files with JavaScript, with a\nlovely and simple API.\n\nSee https://stuk.github.io/jszip for all the documentation.\n\n```javascript\nvar zip = new JSZip();\n\nzip.file(\"Hello.txt\", \"Hello World\\n\");\n\nvar img = zip.folder(\"images\");\nimg.file(\"smile.gif\", imgData, {base64: true});\n\nzip.generateAsync({type:\"blob\"}).then(function(content) {\n    // see FileSaver.js\n    saveAs(content, \"example.zip\");\n});\n\n/*\nResults in a zip containing\nHello.txt\nimages/\n    smile.gif\n*/\n```\nLicense\n-------\n\nJSZip is dual-licensed. You may use it under the MIT license *or* the GPLv3\nlicense. See [LICENSE.markdown](LICENSE.markdown).\n","owner":{"name":"Stuk","avatar":"https://github.com/Stuk.png","link":"https://github.com/Stuk"},"deprecated":false,"homepage":null,"license":"(MIT OR GPL-3.0)","keywords":["zip","deflate","inflate"],"computedKeywords":[],"computedMetadata":{},"created":1378913145354,"modified":1521542316595,"lastPublisher":{"name":"dduponchel","email":"d.duponchel@gmail.com","avatar":"https://gravatar.com/avatar/197913c8c04e79ab2de44614d380515c","link":"https://www.npmjs.com/~dduponchel"},"owners":[{"name":"cwmma","email":"calvin.metcalf@gmail.com","avatar":"https://gravatar.com/avatar/e8153037a068f1c32e546f82729a64a5","link":"https://www.npmjs.com/~cwmma"},{"name":"dduponchel","email":"d.duponchel@gmail.com","avatar":"https://gravatar.com/avatar/197913c8c04e79ab2de44614d380515c","link":"https://www.npmjs.com/~dduponchel"},{"name":"stuk","email":"stuart@stuartk.com","avatar":"https://gravatar.com/avatar/0e815006aef4a0e79d60df31b654648c","link":"https://www.npmjs.com/~stuk"}],"lastCrawl":"2018-06-04T11:44:03.356Z","_searchInternal":{"concatenatedName":"jszip","alternativeNames":["jszip","jszip","jszip"],"popularName":"jszip","downloadsMagnitude":7},"dependents":571,"humanDependents":"571","changelogFilename":"https://raw.githubusercontent.com/Stuk/jszip/a4138a23cb9b8eb773c19af7d36d5ce2bcf4bfda/CHANGES.md","objectID":"jszip","_highlightResult":{"name":{"value":"<em>jszip</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["jszip"]},"description":{"value":"Create, read and edit .zip files with JavaScript http://stuartk.com/<em>jszip</em>","matchLevel":"full","fullyHighlighted":false,"matchedWords":["jszip"]},"owner":{"name":{"value":"Stuk","matchLevel":"none","matchedWords":[]}},"keywords":[{"value":"zip","matchLevel":"none","matchedWords":[]},{"value":"deflate","matchLevel":"none","matchedWords":[]},{"value":"inflate","matchLevel":"none","matchedWords":[]}],"owners":[{"name":{"value":"cwmma","matchLevel":"none","matchedWords":[]}},{"name":{"value":"dduponchel","matchLevel":"none","matchedWords":[]}},{"name":{"value":"stuk","matchLevel":"none","matchedWords":[]}}],"_searchInternal":{"alternativeNames":[{"value":"<em>jszip</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["jszip"]},{"value":"<em>jszip</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["jszip"]},{"value":"<em>jszip</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["jszip"]}],"popularName":{"value":"<em>jszip</em>","matchLevel":"full","fullyHighlighted":true,"matchedWords":["jszip"]}}},"types":"// Type definitions for JSZip 3.1\n// Project: http://stuk.github.com/jszip/\n// Definitions by: mzeiher <https://github.com/mzeiher>, forabi <https://github.com/forabi>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.3\n\n/// <reference types=\"node\" />\n\ninterface JSZipSupport {\n    arraybuffer: boolean;\n    uint8array: boolean;\n    blob: boolean;\n    nodebuffer: boolean;\n}\n\ntype Compression = 'STORE' | 'DEFLATE';\n\ninterface Metadata  {\n    percent: number;\n    currentFile: string;\n}\n\ntype OnUpdateCallback = (metadata: Metadata) => void;\n\ninterface InputByType {\n    base64: string;\n    string: string;\n    text: string;\n    binarystring: string;\n    array: number[];\n    uint8array: Uint8Array;\n    arraybuffer: ArrayBuffer;\n    blob: Blob;\n    stream: NodeJS.ReadableStream;\n}\n\ninterface OutputByType {\n    base64: string;\n    text: string;\n    binarystring: string;\n    array: number[];\n    uint8array: Uint8Array;\n    arraybuffer: ArrayBuffer;\n    blob: Blob;\n    nodebuffer: Buffer;\n}\n\ntype InputFileFormat = InputByType[keyof InputByType];\n\ndeclare namespace JSZip {\n    type InputType = keyof InputByType;\n\n    type OutputType = keyof OutputByType;\n\n    interface JSZipObject {\n        name: string;\n        dir: boolean;\n        date: Date;\n        comment: string;\n        /** The UNIX permissions of the file, if any. */\n        unixPermissions: number | string | null;\n        /** The UNIX permissions of the file, if any. */\n        dosPermissions: number | null;\n        options: JSZipObjectOptions;\n\n        /**\n         * Prepare the content in the asked type.\n         * @param type the type of the result.\n         * @param onUpdate a function to call on each internal update.\n         * @return Promise the promise of the result.\n         */\n        async<T extends OutputType>(type: T, onUpdate?: OnUpdateCallback): Promise<OutputByType[T]>;\n        nodeStream(type?: 'nodestream', onUpdate?: OnUpdateCallback): NodeJS.ReadableStream;\n    }\n\n    interface JSZipFileOptions {\n        /** Set to `true` if the data is `base64` encoded. For example image data from a `<canvas>` element. Plain text and HTML do not need this option. */\n        base64?: boolean;\n        /**\n         * Set to `true` if the data should be treated as raw content, `false` if this is a text. If `base64` is used,\n         * this defaults to `true`, if the data is not a `string`, this will be set to `true`.\n         */\n        binary?: boolean;\n        /**\n         * The last modification date, defaults to the current date.\n         */\n        date?: Date;\n        compression?: string;\n        comment?: string;\n        /** Set to `true` if (and only if) the input is a \"binary string\" and has already been prepared with a `0xFF` mask. */\n        optimizedBinaryString?: boolean;\n        /** Set to `true` if folders in the file path should be automatically created, otherwise there will only be virtual folders that represent the path to the file. */\n        createFolders?: boolean;\n        /** Set to `true` if this is a directory and content should be ignored. */\n        dir?: boolean;\n\n        /** 6 bits number. The DOS permissions of the file, if any. */\n        dosPermissions?: number | null;\n        /**\n         * 16 bits number. The UNIX permissions of the file, if any.\n         * Also accepts a `string` representing the octal value: `\"644\"`, `\"755\"`, etc.\n         */\n        unixPermissions?: number | string | null;\n    }\n\n    interface JSZipObjectOptions {\n        compression: Compression;\n    }\n\n    interface JSZipGeneratorOptions<T extends OutputType = OutputType> {\n        compression?: Compression;\n        compressionOptions?: null | {\n            level: number;\n        };\n        type?: T;\n        comment?: string;\n        /**\n         * mime-type for the generated file.\n         * Useful when you need to generate a file with a different extension, ie: â.odsâ.\n         * @default 'application/zip'\n         */\n        mimeType?: string;\n        encodeFileName?(filename: string): string;\n        /** Stream the files and create file descriptors */\n        streamFiles?: boolean;\n        /** DOS (default) or UNIX */\n        platform?: 'DOS' | 'UNIX';\n    }\n\n    interface JSZipLoadOptions {\n        base64?: boolean;\n        checkCRC32?: boolean;\n        optimizedBinaryString?: boolean;\n        createFolders?: boolean;\n    }\n}\n\ninterface JSZip {\n    files: {[key: string]: JSZip.JSZipObject};\n\n    /**\n     * Get a file from the archive\n     *\n     * @param Path relative path to file\n     * @return File matching path, null if no file found\n     */\n    file(path: string): JSZip.JSZipObject;\n\n    /**\n     * Get files matching a RegExp from archive\n     *\n     * @param path RegExp to match\n     * @return Return all matching files or an empty array\n     */\n    file(path: RegExp): JSZip.JSZipObject[];\n\n    /**\n     * Add a file to the archive\n     *\n     * @param path Relative path to file\n     * @param data Content of the file\n     * @param options Optional information about the file\n     * @return JSZip object\n     */\n    file<T extends JSZip.InputType>(path: string, data: InputByType[T] | Promise<InputByType[T]>, options?: JSZip.JSZipFileOptions): this;\n    file<T extends JSZip.InputType>(path: string, data: null, options?: JSZip.JSZipFileOptions & { dir: true }): this;\n\n    /**\n     * Returns an new JSZip instance with the given folder as root\n     *\n     * @param name Name of the folder\n     * @return New JSZip object with the given folder as root or null\n     */\n    folder(name: string): JSZip;\n\n    /**\n     * Returns new JSZip instances with the matching folders as root\n     *\n     * @param name RegExp to match\n     * @return New array of JSZipFile objects which match the RegExp\n     */\n    folder(name: RegExp): JSZip.JSZipObject[];\n\n    /**\n     * Call a callback function for each entry at this folder level.\n     *\n     * @param callback function\n     */\n    forEach(callback: (relativePath: string, file: JSZip.JSZipObject) => void): void;\n\n    /**\n     * Get all files which match the given filter function\n     *\n     * @param predicate Filter function\n     * @return Array of matched elements\n     */\n    filter(predicate: (relativePath: string, file: JSZip.JSZipObject) => boolean): JSZip.JSZipObject[];\n\n    /**\n     * Removes the file or folder from the archive\n     *\n     * @param path Relative path of file or folder\n     * @return Returns the JSZip instance\n     */\n    remove(path: string): JSZip;\n\n    /**\n     * Generates a new archive asynchronously\n     *\n     * @param options Optional options for the generator\n     * @param onUpdate The optional function called on each internal update with the metadata.\n     * @return The serialized archive\n     */\n    generateAsync<T extends JSZip.OutputType>(options?: JSZip.JSZipGeneratorOptions<T>, onUpdate?: OnUpdateCallback): Promise<OutputByType[T]>;\n\n    /**\n     * Generates a new archive asynchronously\n     *\n     * @param options Optional options for the generator\n     * @param onUpdate The optional function called on each internal update with the metadata.\n     * @return A Node.js `ReadableStream`\n     */\n    generateNodeStream(options?: JSZip.JSZipGeneratorOptions<'nodebuffer'>, onUpdate?: OnUpdateCallback): NodeJS.ReadableStream;\n\n    /**\n     * Deserialize zip file asynchronously\n     *\n     * @param data Serialized zip file\n     * @param options Options for deserializing\n     * @return Returns promise\n     */\n    loadAsync(data: InputFileFormat, options?: JSZip.JSZipLoadOptions): Promise<JSZip>;\n\n    /**\n     * Create JSZip instance\n     */\n\n    /**\n     * Create JSZip instance\n     * If no parameters given an empty zip archive will be created\n     *\n     * @param data Serialized zip archive\n     * @param options Description of the serialized zip archive\n     */\n    new (data?: InputFileFormat, options?: JSZip.JSZipLoadOptions): this;\n\n    (): JSZip;\n\n    prototype: JSZip;\n    support: JSZipSupport;\n    external: {\n        Promise: PromiseConstructorLike;\n    };\n    version: string;\n}\n\ndeclare var JSZip: JSZip;\n\nexport = JSZip;\n","typesLocation":"https://unpkg.com/@types/jszip/index.d.ts"},"jquery":{"name":"jquery","version":"3.3.1"},"lodash":{"name":"lodash","version":"4.17.10"}}},"lambdaId":"5075e374-101f-4998-bf04-7f3e36e19f97","additionalFiles":[]},"PROJECT_META":{"projectName":"JK","projectDescription":"JK","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"JK","repoUrl":"https://github.com/rahi9208/JK","lastSave":1529399811305},"VCS_STATE":{"provider":"github","repo":{"name":"JK","url":"https://github.com/rahi9208/JK"}}}